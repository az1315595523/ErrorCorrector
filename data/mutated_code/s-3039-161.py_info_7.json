{
  "expectedTimes": 11,
  "times": 5,
  "realTimes": 9,
  "single_Info": [
    {
      "mutated_info": "Mutator: ConditionMutator\nMutation Type: LogicOpReverse\nLine: 6\nOriginal Code: (x == b or x == c)\n\nMutated Code: (x == b and x == c)\n\nDescription: LogicOpReverse: (x == b or x == c)\n → (x == b and x == c)\n\n",
      "mutator_type": "ConditionMutator"
    },
    {
      "mutated_info": "Mutator: ConditionMutator\nMutation Type: LogicOpReverse\nLine: 6\nOriginal Code: (x == b and x == c)\n\nMutated Code: (x == b or x == c)\n\nDescription: LogicOpReverse: (x == b and x == c)\n → (x == b or x == c)\n\n",
      "mutator_type": "ConditionMutator"
    },
    {
      "mutated_info": "Mutator: ConditionMutator\nMutation Type: PartialCondition\nLine: 6\nOriginal Code: (x == b or x == c)\n\nMutated Code: x == b\n\nDescription: PartialCondition: (x == b or x == c)\n → x == b\n\n",
      "mutator_type": "ConditionMutator"
    },
    {
      "mutated_info": "Mutator: VariableNameMutator\nMutation Type: VRenew\nLine: 5\nOriginal Code: a\nMutated Code: d\nDescription: Renamed 'a' to 'd'\n",
      "mutator_type": "VariableNameMutator"
    },
    {
      "mutated_info": "Mutator: BracketMutator\nMutation Type: BAdd_extra\nLine: 3\nOriginal Code: c = min(d)\nMutated Code: c = min{(d)\nDescription: Added extra opening { at line 3\n",
      "mutator_type": "BracketMutator"
    }
  ]
}