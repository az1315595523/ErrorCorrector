{
  "expectedTimes": 6,
  "times": 5,
  "realTimes": 6,
  "single_Info": [
    {
      "mutated_info": "Mutator: ConditionMutator\nMutation Type: LogicOpReverse\nLine: 6\nOriginal Code: (x == m or x == n)\n\nMutated Code: (x == m and x == n)\n\nDescription: LogicOpReverse: (x == m or x == n)\n → (x == m and x == n)\n\n",
      "mutator_type": "ConditionMutator"
    },
    {
      "mutated_info": "Mutator: ConditionMutator\nMutation Type: PartialCondition\nLine: 6\nOriginal Code: (x == m and x == n)\n\nMutated Code: x == m\n\nDescription: PartialCondition: (x == m and x == n)\n → x == m\n\n",
      "mutator_type": "ConditionMutator"
    },
    {
      "mutated_info": "Mutator: OperatorMutator\nMutation Type: CompareSubs\nLine: 6\nOriginal Code: (x == m)\n\nMutated Code: (x < m)\n\nDescription: Replaced Eq with Lt in comparison\n",
      "mutator_type": "OperatorMutator"
    },
    {
      "mutated_info": "Mutator: ConditionMutator\nMutation Type: BoundaryAdjust\nLine: 6\nOriginal Code: (x < m)\n\nMutated Code: (x <= m)\n\nDescription: BoundaryAdjust: (x < m)\n → (x <= m)\n\n",
      "mutator_type": "ConditionMutator"
    },
    {
      "mutated_info": "Mutator: FunctionMutator\nMutation Type: FunctionReplace\nLine: 2\nOriginal Code: max(...)\nMutated Code: abs(...)\nDescription: Replaced function call max() with abs()\n",
      "mutator_type": "FunctionMutator"
    }
  ]
}