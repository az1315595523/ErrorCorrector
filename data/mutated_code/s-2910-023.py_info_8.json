{
  "expectedTimes": 11,
  "times": 8,
  "realTimes": 10,
  "single_Info": [
    {
      "mutated_info": "Mutator: ConditionMutator\nMutation Type: CompareSubs\nLine: 4\nOriginal Code: (N == 1)\n\nMutated Code: (N != 1)\n\nDescription: CompareSubs: (N == 1)\n → (N != 1)\n\n",
      "mutator_type": "ConditionMutator"
    },
    {
      "mutated_info": "Mutator: BoundaryMutator\nMutation Type: RangeStartInc\nLine: 7\nOriginal Code: range(N - 1)\n\nMutated Code: range(N - 1)\n\nDescription: RangeStartInc 3\n",
      "mutator_type": "BoundaryMutator"
    },
    {
      "mutated_info": "Mutator: OperatorMutator\nMutation Type: CompareSubs\nLine: 4\nOriginal Code: (N != 1)\n\nMutated Code: (N == 1)\n\nDescription: Replaced NotEq with Eq in comparison\n",
      "mutator_type": "OperatorMutator"
    },
    {
      "mutated_info": "Mutator: OperatorMutator\nMutation Type: BinOpSubs\nLine: 10\nOriginal Code: ('%.2f' % s)\n\nMutated Code: ('%.2f' // s)\n\nDescription: Replaced Mod with FloorDiv in binary operation\n",
      "mutator_type": "OperatorMutator"
    },
    {
      "mutated_info": "Mutator: OperatorMutator\nMutation Type: BinOpSubs\nLine: 10\nOriginal Code: ('%.2f' // s)\n\nMutated Code: ('%.2f' + s)\n\nDescription: Replaced FloorDiv with Add in binary operation\n",
      "mutator_type": "OperatorMutator"
    },
    {
      "mutated_info": "Mutator: VariableNameMutator\nMutation Type: VReplace\nLine: 10\nOriginal Code: s\nMutated Code: N\nDescription: Renamed 's' to 'N'\n",
      "mutator_type": "VariableNameMutator"
    },
    {
      "mutated_info": "Mutator: ConditionMutator\nMutation Type: CompareSubs\nLine: 4\nOriginal Code: (N == 1)\n\nMutated Code: (N <= 1)\n\nDescription: CompareSubs: (N == 1)\n → (N <= 1)\n\n",
      "mutator_type": "ConditionMutator"
    },
    {
      "mutated_info": "Mutator: BoundaryMutator\nMutation Type: RangeStartInc\nLine: 7\nOriginal Code: range(N - 1)\n\nMutated Code: range(N - 1)\n\nDescription: RangeStartInc 2\n",
      "mutator_type": "BoundaryMutator"
    }
  ]
}